default.dir=ltr
default.form=infix
default.lSpace=0
default.rSpace=0
default.minSize=0
default.maxSize=10000
abs.value=\u007C
abs.form=fence
apply.form=fence
apply.separator=,\u0020
apply.lValue=(
apply.rValue=)
card.value=\u007C
card.form=fence
cartesianproduct.value=\u00D7
ceiling.form=prefix
ceiling.lValue=(
ceiling.rValue=)
ceiling.value=ceil
ci.fontStyle=italic
compose.value=\u00B0
declare.separator=:=
declare.form=fence
declare.rValue=.
divide.value=\u00F7
emptyset.value={}
eq.value==
eq.reln=true
exists.value=exists
exists.separator=:\u0020
exists.form=prefix
exponentiale.value=e
factorial.value=!
factorial.form=postfix
floor.form=prefix
floor.lValue=(
floor.rValue=)
forall.form=prefix
forall.value=for all
geq.value=\u2265
geq.reln=true
gt.value=>
gt.reln=true
in.value=<font face="MS Mincho">\u2208</font>
infinity.value=\u221E
intersect.value=\u2229
leq.value=\u2264
leq.reln=true
list.lValue=(
list.rValue=)
list.form=fence
list.separator=,\u0020
lt.value=<
lt.reln=true
math.dir=htl
minus.value=\u2212
neq.value=\u2260
neq.reln=true
not.value=\u00AC
not.form=prefix
notanumber.value=NaN
notin.value=<font face="MS Mincho">\u2209</font>
notprsubset.value=<font face="MS Mincho">\u2284</font>
notsubset.value=<font face="MS Mincho">\u2288</font>
otherwise.value=otherwise.
otherwise.form=postfix
pi.value=\u03C0
piece.form=fence
piece.lValue=if\u0020
piece.rValue=.
piecewise.lValue={
piecewise.rValue=\u0020
piecewise.form=fence
piecewise.dir=htl
plus.value=+
prsubset.value=<font face="MS Mincho">\u2282</font>
set.lValue={
set.rValue=}
set.form=fence
set.separator=,\u0020
setdiff.value=\u2212
subset.value=<font face="MS Mincho">\u2286</font>
times.value=\u00D7
union.value=\u222A
vector.lValue=<font face="MS Mincho">\u3008</font>
vector.rValue=<font face="MS Mincho">\u3009</font>
vector.form=fence
vector.separator=,\u0020
